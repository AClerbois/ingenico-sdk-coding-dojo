swagger: '2.0'
info:
  title: Ingenico Direct
  version: 1.0.0
  description: "
  # Introduction
  \nThe Ingenico Direct API has been designed as a REST API. It uses the HTTP protocol as its foundation. Each resource is accessible under a clearly named URL and the HTTP response codes are used to relay status. HTTP Verbs like GET and POST are used to interact with the resources. To support accessibility by clients directly, as opposed to your server, our servers support cross-origin resource sharing. We use JSON for all of our payloads, including error messages

  \n All these characteristics mean that you will be able to use standard off the shelf software to interact with Ingenico ePayments. To make the integration even easier, Ingenico ePayments also has SDKs that wrap both the complete Server API as well as the complete Client API.
    "
  x-logo:
    url: 'https://support.direct.ingenico.com/documentation/api/reference/ingenico.png'
    altText: Ingenico ePayments
host: 'payment.direct.ingenico.com'
schemes:
  - https
tags:
  - name: Payments
    description: "The payments REST services allow you to initiate a payment, retrieve the payment details or perform specific actions like refunding or requesting capture of a payment. A payment is identified by its paymentId. Some payment products allow a two step approach allowing you to control when the authorization takes place separate from when the funds are actually captured."
  - name: Tokens
    description: "Using our tokenization service you can tokenize re-usable payment data like card data, bank account data including Direct Debit Mandates and PayPal BillingAgreementIDs. The main purpose for tokens is re-use of payment details. The additional benefit is that you do not need to store any sensitive payment details on your server, while still having the benefit to be able to re-use them. This allows you to process recurring card transactions without actually having access to the real card data.

      \n Tokens can be used for two types of transactions:

      \n* Recurring: Automatically charging your consumer in a regular, e.g. monthly, time frame;
      \n* One-off: Charge the consumer without the consumer having to re-enter all of their payment details.
      
      \nThe second scenario can be used to facilitate a one-click checkout solution, that would still allow the consumer to enter only their CVV value for a card transaction. CVV values can't be tokenized as they are not allowed to be stored at all.

      \nBesides the re-use of payment data, tokens have one other major use-case: Direct Debit Mandates. Especially SEPA Direct Debit transactions require that the mandate for the transactions is managed through a token with an associated mandate. Mandates are created in one go with the token, but can have a state that requires that they are approved before they can be used. As the mandate process is in most cases an offline process the approval will allow you to set the location and date where and when the mandate was signed by the consumer. Without an approved SEPA mandate you will not be able to process any payments regarding this mandate."
  - name: HostedCheckout
    description: "Using hostedCheckouts you can process transactions using MyCheckout, our easy to use hosted responsive payment pages. Your consumers will be able to complete the payment process using MyCheckout that is hosted by us. Using these pages to capture card details and process card transactions will greatly reduce not only your integration efforts, but it will also reduce your 'PCI exposure' to the lowest level (SAQ-A).

      \n The layout and look and feel of the MyCheckout Pages can be managed through the Configuration Center. Here you will find the powerful, yet very intuitive MyCheckout editor that lets you create multiple variations of your hosted payment pages hosted by us. If you have created multiple versions you are able to direct your consumers to specific variants through this API. This allows you easily test out different variations or continue specific campaigns all the way through to the payment pages.

      \n The MyCheckout pages automatically adapt based on screen width of your consumers device. Clients that do not support JavaScript to be run on the client will still be able to make payments (although they will lack all the client side validation and automatic formatting to assist them). Please note that both the responsive nature and the support for clients without JavaScript support might not apply to 3rd party payment pages that the consumer might be redirected to to complete the payment.

      \n MyCheckout is also modular in its setup, allowing you to specify exactly what you want us to do as part of your checkout flow. You decide if we should display the payment product selection and/or the confirmation page after a successful payment.

      \n In case a payment product that requires the consumer to (manually) push the funds was selected, you will have the option to show these instructions again at a later moment. You could show them on your website in an area where the consumer can track the progress of their order. To avoid multiple payments you should however avoid showing them again for transactions that have already been paid."
x-tagGroups:
  - name: Server API
    tags:
      - Payments
      - Tokens
      - HostedCheckout
paths:
  '/v1/{merchantId}/payments/{paymentId}':
    get:
      summary: "Get payment"
      description: "Retrieves the details of the payment with the paymentId provided in the URL. 
        This paymentId was returned to you with the create payment request. The request does not have any additional input parameters."
      tags:
        - Payments
      operationId: Payments_GetPayment
      parameters:
        - $ref: '#/parameters/merchantId'        
        - $ref: '#/parameters/paymentId'
      responses:
        '200':
          x-nullable: true
          description: 'Return the details of the payment'
          schema:
            $ref: '#/definitions/PaymentResponse'
        '404':
          x-nullable: true
          description: 'Payment not found'
          schema:
            $ref: '#/definitions/PaymentResponse'
  '/v1/{merchantId}/payments':
    post:
      summary: "Create payment"
      description: "You initiate a payment by posting all the required payment details. After you have done so one or more of the following things can take place:

        \n* Your payment request is rejected. This can happen for various reasons, but a detailed reason is always returned in the response to you. In some cases a payment object was created and you will find all the details in the response as well.
        \n* The data you submitted used to assess the risk of potential fraud. If this is deemed to great based on your configuration the transaction is either rejected or placed in a queue for your manual review. If the fraud risk is deemed to be within the acceptable set limits the processing is continued and one of the other possible outcomes listed here will be returned.
        \n* The data is sent to a third party for authorization
        \n* The consumer is required to authenticate themselves and a redirect to a third party is required, sometimes this also includes the actual authorization of the payment by the consumer while at the third party. The response will contain all the details required for you to redirect the consumer to the third party.
        \n* Payment instruction details are returned so you can provide the right instructions to your consumer on how to complete the payment.
        \n* The data is simply stored for future processing.

        \nPlease look at the flow diagram of each payment product that you would like to integrate to see what possible responses can be returned to you depending on the payment product.

        \nThe type of processing flow is also dependent on the individual configuration of your account(s). This will be chosen in conjunction with you to best match your business"
      tags:
        - Payments
      operationId: Payments_CreatePayment
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - $ref: '#/parameters/merchantId' 
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
          x-nullable: false
      responses:
        '200':
          x-nullable: true
          description: 'The payment request was successfully processed and a payment object was created.'
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
        '400':
          x-nullable: true
          description: 'The request was malformed or was missing required data. When a required property was missing the error message will point out which property caused the error.'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '402':
          x-nullable: true
          description: 'The payment was declined by a 3rd party (acquirer, payment processor, etc.)'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '403':
          x-nullable: true
          description: 'You are not allowed to access the service or account or your API authentication failed.'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '404':
          x-nullable: true
          description: 'Payment not found'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '409':
          x-nullable: true
          description: 'Conflict'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '502':
          x-nullable: true
          description: "Any 5XX response points to something that went wrong on our end. This could also be that the system was unable to route the transaction to an appropriate acquirer/3rd party. Another reason for such a response if when the 3rd party's response could not be understood."
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
        '503':
          x-nullable: true
          description: 'Service unavailable'
          schema:
            $ref: '#/definitions/PaymentErrorResponse'
  '/v1/{merchantId}/payments/{paymentId}/cancel':
    post:
      summary: Cancel a payment
      description: "If you decided that you don't want to process the payment it is always smart to cancel the payment. This makes it impossible to process the payment any further and will also try to reverse an authorization on a card. Reversing an authorization that you will not be utilizing will prevent you from having to pay a fee/penalty for unused authorization requests.\n\nWhilst scheme regulations require that acquirers (and their providers, like us) support authorization reversals, there are no rules towards issuers mandating them to process the reversal advice. Therefore there is no guarantee the authorization hold is released. Also be aware that the issuer needs time to process the request. The funds may not be unblocked immediately even whilst the request is sent real-time.\nFor any authorization reversal request initiated by a merchant, we will pass the request through to an acquirer for subsequent submission to the card issuer for processing.\n\nThe authorization reversal can only be performed by the card issuer, and under no circumstances will we be responsible for performing the authorization reversal.\n\nThere is no guarantee that the card issuer will process the authorization reversal, nor is there any guarantee that the authorization reversal will occur in real-time. Neither we nor any of its affiliates will be liable to a merchant for any costs, losses and/or damages arising out of a card issuer not processing or delaying to process an authorization reversal request."
      tags:
        - Payments
      operationId: Cancels_Cancel
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/paymentId'
      responses:
        '200':
          x-nullable: true
          description: 'The payment has been cancelled. Some acquirers/issuers will provide some feedback in case a reversal of the authorization has been performed.'
          schema:
            $ref: '#/definitions/CancelPaymentResponse'
        '400':
          x-nullable: true
          description: Incorrect input data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          x-nullable: true
          description: Payment required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          x-nullable: true
          description: Payment was not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          x-nullable: true
          description: Cancellation is not allowed because payment is closed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          x-nullable: true
          description: Internal server exception
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/{merchantId}/payments/{paymentId}/captures':
    get:
      summary: "Get captures of payment"
      description: "Retrieves the details of all captures performed on the payment with the paymentId provided in the URL"
      tags:
        - Payments
      operationId: Captures_GetCaptures
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/paymentId'
      responses:
        '200':
          x-nullable: true
          description: 'An HTTP 200 response is returned if the payment was found, even if no captures were performed on it.'
          schema:
            $ref: '#/definitions/CapturesResponse'
  '/v1/{merchantId}/payments/{paymentId}/capture':
    post:
      summary: "Capture payment"
      description: "When you want to capture the funds on a payment with a PENDING_CAPTURE state you can call this API. This API allows multiple, partial captures of the authorized funds. Depending on the payment product and the 3rd party used to process the payment this might be done in real-time or in more off-line, batch-like fashion.\n\nIf the created payment requires approval then it will require this step before the funds are actually captured.\n\nPENDING_CAPTURE is only a common status with card transactions. You can specify the amount you would like to be captured in case you want to capture a lower amount than the authorized amount."
      tags:
        - Payments
      operationId: Captures_Capture
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/paymentId'
        - name: capturePaymentRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/CapturePaymentRequest'
          x-nullable: false
      responses:
        '201':
          x-nullable: true
          description: 'Successful response, payment has been captured'
          schema:
            $ref: '#/definitions/CaptureResponse'
  '/v1/{merchantId}/payments/{paymentId}/refunds':
    get:
      summary: "Get refunds of payment"
      description: "Retrieves the details of all refunds performed on the payment with the paymentId provided in the URL."
      tags:
        - Payments
      operationId: Refunds_Refunds
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/paymentId'
      responses:
        '200':
          x-nullable: true
          description: 'An HTTP 200 response is returned if the refunds were found.'
          schema:
            $ref: '#/definitions/RefundsResponse'
  '/v1/{merchantId}/payments/{paymentId}/refund':
    post:
      summary: "Create refund"
      description: "You can refund any transaction by just calling this API. 
        The system will automatically select the most appropriate means to refund the transaction based on the payment product that was used for the payment and the currency and the country of the refund request.
        \n\nDepending on the payment product of the payment you will need to supply refund specific details on where the money should be refunded to or not. You always have the option to refund just a portion of the payment amount. It is also possible to submit multiple refund requests on one payment as long as the total amount to be refunded does not exceed the total amount that was paid."
      tags:
        - Payments
      operationId: Refunds_Refund
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/paymentId'
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/RefundRequest'
          x-nullable: false
      responses:
        '201':
          x-nullable: true
          description: 'The refund was successfully created.'
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          x-nullable: true
          description: 'Bad request'
          schema:
            $ref: '#/definitions/RefundErrorResponse'
        '404':
          x-nullable: true
          description: 'The most common cause for this response id that the payment was not in a cancelable state.'
          schema:
            $ref: '#/definitions/RefundErrorResponse'
  '/v1/{merchantId}/tokens/{tokenId}':
    get:
      summary: "Get token"
      description: "Use GET on a specific token to retrieve all the tokenized data for that ID. You can use some of this data towards the consumer to let them choose which stored data to re-use. You can also use data like the expiry date to check if you need to ask for updated data from your consumer.
      
      \nWe will never return full card details."
      tags:
        - Tokens
      operationId: Tokens_GetToken
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/tokenId'
      responses:
        '200':
          x-nullable: true
          description: 'All non-sensitive data that is stored is returned.'
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          x-nullable: true
          description: "Bad request"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          x-nullable: true
          description: "In case you are trying to retrieve a token that does not exist or has been deleted."
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/{merchantId}/hostedcheckouts':
    post:
      summary: "Create hosted checkout"
      description: "You can start a hostedCheckout flow by posting the relevant details to the endpoint. We will then return you all the details you need to redirect the consumer to us, retrieve the status and recognize the consumer when he/she returns to your website. \n The hosted checkout allows the use of three distinct components:
      
      \n* Presenting a (filtered) list of payment products that the consumer can choose from;
      
      \n* Handling of the actual payment, potentially involving data capture, redirection and/or the displaying of payment instructions;
      
      \n* Presenting a confirmation/failure page after the payment.
      
      \n\n Step 1 and 3 from the above list are optional. When no or partial filtering is provided, the first page the consumer will see is a payment product selection page. However, the hosted checkout will start as if a payment product had been selected if that specific payment product is the only entry in the request's restriction filters.
      
      \nBy providing payment product ids and groups in the hostedCheckoutSpecificInput's paymentProductFilters object, you can reduce the list of available payment products by either excluding or restricting to certain products. Note that at least one viable payment product must be left after filtering and that exclusion is leading, meaning that restricting and excluding the same product will lead to exclusion.
      
      \nBy setting the tokensOnly boolean to true, as part of the paymentProductFilters object, the consumer may only complete the payment using one of the accounts on file provided in the tokens property of hostedCheckoutSpecificInput.
      
      \nBy setting the showResultPage boolean to false, as part of the hostedCheckoutSpecificInput, the system will skip the confirmation/failure page after the consumer has completed the payment. This setting is true by default and the results page will be presented to the user.
      
      \nIn case the payment product selection page needs to be skipped the hostedCheckout call needs to contain one of the following objects in which all payment products have been categorized. These will also be used if the consumer selects a related payment product.
         
      \n* Card payments - cardPaymentMethodSpecificInput
      
      \n* All credit and debit card products fall into this category if they allow for direct submission of card data without a redirect to a third party to capture the card details.
            
      \n* Redirect payments - redirectPaymentMethodSpecificInput
      
      \n* All payment products that involve a redirect to a 3rd party to complete the payment directly online, like PayPal.

      \nA generic transaction can be submitted using the order and the fraudFields objects."
      tags:
        - HostedCheckout
      operationId: HostedCheckout_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - $ref: '#/parameters/merchantId'
        - name: createHostedCheckoutRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateHostedCheckoutRequest'
          x-nullable: false
      responses:
        '200':
          x-nullable: true
          description: ''
          schema:
            $ref: '#/definitions/CreateHostedCheckoutResponse'
        '400':
          x-nullable: true
          description: 'Bad request'
          schema:
            $ref: '#/definitions/CreateHostedCheckoutResponse'
  '/v1/{merchantId}/hostedcheckouts/{hostedcheckoutId}':
    get:
      tags:
        - HostedCheckout
      summary: "Get hosted checkout status"
      description: "You can retrieve the current status of the hosted checkout by doing a get on the hostedCheckoutId. When a payment has been created during the hosted checkout session the details are returned in this object.

        \nSessions have a maximum life span of 2 hours. This means that you can only retrieve this information while the session has not timed-out.

        \nThe status of the hostedCheckout and the payment will change when the consumer is still busy completing the hosted checkout session."
      operationId: HostedCheckout_GetHostedcheckoutStatus
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/hostedcheckoutId'
      responses:
        '200':
          x-nullable: true
          description: 'The request was processed correctly and a valid response is returned. In case a payment was created during the hosted checkout the details are returned in the createdPaymentOutput object.'
          schema:
            $ref: '#/definitions/GetHostedCheckoutResponse'
        '404':
          x-nullable: true
          description: 'Bad request'
          schema:
            $ref: '#/definitions/GetHostedCheckoutResponse'
parameters: 
  merchantId:
    name: merchantId
    type: string
    description: The Merchant Id
    in: path
    required: true
    x-nullable: true
  paymentProductId:
    name: paymentProductId
    type: string
    description: The Payment Product Id
    in: path
    required: true
    x-nullable: true
  paymentId:
    type: string
    name: paymentId
    description: The Payment Id
    in: path
    required: true
    x-nullable: true
  hostedMandateManagementId:
    type: string
    name: hostedMandateManagementId
    description: "The HostedMandateManagement Id"
    in: path
    required: true
    x-nullable: false
  hostedcheckoutId:
    type: string
    name: hostedcheckoutId
    description: "The HostedCheckout Id"
    in: path
    required: true
    x-nullable: false
  captureId:
    type: string
    name: captureId
    description: "The Capture Id"
    in: path
    required: true
    x-nullable: false
  refundId:  
    type: string
    name: refundId
    description: "The Refund Id"
    in: path
    required: true
    x-nullable: false
  payoutId:  
    name: payoutId
    type: string
    description: "The Payout Id"
    in: path
    required: true
    x-nullable: false
  uniqueMandateReference:
    name: uniqueMandateReference  
    type: string
    in: path
    required: true
    x-nullable: false
  tokenId: 
    name: tokenId 
    type: string
    description: "The Token Id"
    in: path
    required: true
    x-nullable: false
  paymentProductGroupId:  
    name: paymentProductGroupId
    type: string
    description: "The PaymentProductGroup Id"
    in: path
    required: true
    x-nullable: false
definitions:
  CancelPaymentResponse:
    type: object
    additionalProperties: false
    properties:
      cardPaymentMethodSpecificOutput:
        $ref: '#/definitions/CancelPaymentCardPaymentMethodSpecificOutput'
      mobilePaymentMethodSpecificOutput:
        $ref: '#/definitions/CancelPaymentMobilePaymentMethodSpecificOutput'
      payment:
        $ref: '#/definitions/Payment'
  CancelPaymentCardPaymentMethodSpecificOutput:
    type: object
    description: "Object that holds specific information on cancelled mobile payments"
    additionalProperties: false
    properties:
      voidResponseId:
        type: string
        description: "Result of the authorization reversal request\nPossible values are:\n* 00 - Successful reversal\n* 0, 8 or 11 - Reversal request submitted\n* 5 or 55 - Reversal request declined or referred\n* empty or 98 - The provider did not provide a response"
  CancelPaymentMobilePaymentMethodSpecificOutput:
    type: object
    description: "Object that holds specific information on cancelled card payments"
    additionalProperties: false
    properties:
      voidResponseId:
        type: string
        description: "Result of the authorization reversal request\nPossible values are:\n* 00 - Successful reversal\n* 0, 8 or 11 - Reversal request submitted\n* 5 or 55 - Reversal request declined or referred\n* empty or 98 - The provider did not provide a response"
  Payment:
    allOf:
      - $ref: '#/definitions/AbstractOrderStatus'
      - type: object
        description: "Object that holds the payment related properties"
        additionalProperties: false
        properties:
          paymentOutput:
            $ref: '#/definitions/PaymentOutput'
          status:
            description: "Please see Statuses for a full overview of possible values."
            type: string
          statusOutput:
            $ref: '#/definitions/PaymentStatusOutput'
  HostedCheckoutSpecificOutput:
    description: "Hosted Checkout specific information. Populated if the payment was created on the platform through a Hosted Checkout."
    type: object
    additionalProperties: false
    properties:
      hostedCheckoutId:
        type: string
        description: "The ID of the Hosted Checkout Session in which the payment was made."
      variant:
        type: string
        description: "Using the Configuration Center it is possible to create multiple variations of your MyCheckout payment pages. By specifying a specific variant you can force the use of another variant then the default. This allows you to test out the effect of certain changes to your hosted mandate pages in a controlled manner. Please note that you need to specify the ID of the variant."
  PaymentOutput:
    allOf:
      - $ref: '#/definitions/OrderOutput'
      - type: object
        description: "Object containing payment details"
        additionalProperties: false
        properties:
          amountPaid:
            type: integer
            description: "Amount that has been paid"
            format: int64
          cardPaymentMethodSpecificOutput:
            $ref: '#/definitions/CardPaymentMethodSpecificOutput'
          mobilePaymentMethodSpecificOutput:
            $ref: '#/definitions/MobilePaymentMethodSpecificOutput'
          paymentMethod:
            type: string
            description: "Payment method identifier used by the our payment engine."
          redirectPaymentMethodSpecificOutput:
            $ref: '#/definitions/RedirectPaymentMethodSpecificOutput'
  BankTransferPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the bank transfer payment method details"
        additionalProperties: false
  AbstractPaymentMethodSpecificOutput:
    type: object
    additionalProperties: false
    properties:
      paymentProductId:
        description: "Payment product identifier
          \n Please see payment products for a full overview of possible values."
        type: integer
        format: int32
  CardPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the card payment method details"
        additionalProperties: false
        properties:
          authorisationCode:
            description: "Card Authorization code as returned by the acquirer"
            type: string
          card:
            $ref: '#/definitions/CardEssentials'
          fraudResults:
            $ref: '#/definitions/CardFraudResults'
          threeDSecureResults:
            $ref: '#/definitions/ThreeDSecureResults'
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
  CardEssentials:
    description: "Object containing card details"
    type: object
    additionalProperties: false
    properties:
      cardNumber:
        description: "The complete credit/debit card number"
        type: string
      expiryDate:
        description: "Expiry date of the card
          \n Format: MMYY"
        type: string
  CardFraudResults:
    allOf:
      - $ref: '#/definitions/FraudResults'
      - type: object
        additionalProperties: false
        properties:
          avsResult:
            description: "
            Result of the Address Verification Service checks. Possible values are:
              \n * A - Address (Street) matches, Zip does not
              \n * B - Street address match for international transactionsÃ¢â‚¬â€Postal code not verified due to incompatible formats
              \n * C - Street address and postal code not verified for international transaction due to incompatible formats
              \n * D - Street address and postal code match for international transaction, cardholder name is incorrect
              \n * E - AVS error
              \n * F - Address does match and five digit ZIP code does match (UK only)
              \n * G - Address information is unavailable; international transaction; non-AVS participant
              \n * H - Billing address and postal code match, cardholder name is incorrect (Amex)
              \n * I - Address information not verified for international transaction
              \n * K - Cardholder name matches (Amex)
              \n * L - Cardholder name and postal code match (Amex)
              \n * M - Cardholder name, street address, and postal code match for international transaction
              \n * N - No Match on Address (Street) or Zip
              \n * O - Cardholder name and address match (Amex)
              \n * P - Postal codes match for international transactionÃ¢â‚¬â€Street address not verified due to incompatible formats
              \n * Q - Billing address matches, cardholder is incorrect (Amex)
              \n * R - Retry, System unavailable or Timed out
              \n * S - Service not supported by issuer
              \n * U - Address information is unavailable
              \n * W - 9 digit Zip matches, Address (Street) does not
              \n * X - Exact AVS Match
              \n * Y - Address (Street) and 5 digit Zip match
              \n * Z - 5 digit Zip matches, Address (Street) does not
              \n * 0 - No service available"
            type: string
          cvvResult:
            description: "
            Result of the Card Verification Value checks. Possible values are:
              \n * M - CVV check performed and valid value
              \n * N - CVV checked and no match
              \n * P - CVV check not performed, not requested
              \n * S - Cardholder claims no CVV code on card, issuer states CVV-code should be on card
              \n * U - Issuer not certified for CVV2
              \n * Y - Server provider did not respond
              \n * 0 - No service available"
            type: string
          fraugster:
            $ref: '#/definitions/FraugsterResults'
          retailDecisions:
            $ref: '#/definitions/FraudResultsRetailDecisions'
  FraugsterResults:
    description: "Results of Fraugster fraud prevention check. Fraugster collects transaction data points such as name, email address, billing, etc. to analyze whether or not the transaction is fraudulent."
    type: object
    additionalProperties: false
    properties:
      fraudInvestigationPoints:
        description: "Result of the Fraugster check Contains the investigation points used during the evaluation"
        type: string
      fraudScore:
        description: "Result of the Fraugster check Contains the overall Fraud score which is an integer between 0 and 99"
        type: integer
        format: int32
  FraudResultsRetailDecisions:
    type: object
    additionalProperties: false
    properties:
      fraudCode:
        type: string
      fraudNeural:
        type: string
      fraudRCF:
        type: string
  FraudResults:
    type: object
    description: "Object containing the results of the fraud screening"
    additionalProperties: false
    properties:
      fraudServiceResult:
        type: string
        description: "Results from the fraud prevention check. Possible values are:
          \n* accepted - Based on the checks performed the transaction can be accepted
          \n* challenged - Based on the checks performed the transaction should be manually reviewed
          \n* denied - Based on the checks performed the transaction should be rejected
          \n* no-advice - No fraud check was requested/performed\n* error - The fraud check resulted in an error and the fraud check was thus not performed"
  ThreeDSecureResults:
    type: object
    description: "3D Secure results object"
    additionalProperties: false
    properties:
      cavv:
        type: string
        description: "CAVV or AVV result indicating authentication validation value"
      eci:
        type: string
        description: "Indicates Authentication validation results returned after AuthenticationValidation"
      xid:
        type: string
        description: "Transaction ID for the Authentication"
  CashPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the cash payment method details"
        additionalProperties: false
  NonSepaDirectDebitPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the non SEPA direct debit payment method details"
        additionalProperties: false
        properties:
          fraudResults:
            $ref: '#/definitions/FraudResults'
  EInvoicePaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the e-invoice payment method details"
        additionalProperties: false
        properties:
          paymentProduct9000SpecificOutput:
            $ref: '#/definitions/EInvoicePaymentProduct9000SpecificOutput'
  EInvoicePaymentProduct9000SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      installmentId:
        type: string
  InvoicePaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the invoice payment method details"
        additionalProperties: false
  MobilePaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the mobile payment method details"
        additionalProperties: false
        properties:
          authorisationCode:
            type: string
            description: "Card Authorization code as returned by the acquirer"
          fraudResults:
            $ref: '#/definitions/CardFraudResults'
          network:
            type: string
            description: "The network that was used for the refund"
          paymentData:
            $ref: '#/definitions/MobilePaymentData'
          threeDSecureResults:
            $ref: '#/definitions/ThreeDSecureResults'
  MobilePaymentData:
    type: object
    additionalProperties: false
    description: "Object containing payment details"
    properties:
      dpan:
        type: string
        description: "The obfuscated DPAN. Only the last four digits are visible."
      expiryDate:
        type: string
        description: "Expiry date of the tokenized card. Format: MMYY"
  RedirectPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the redirect payment product details"
        additionalProperties: false
        properties:
          bankAccountIban:
            $ref: '#/definitions/BankAccountIban'
          fraudResults:
            $ref: '#/definitions/FraudResults'
          paymentProduct840SpecificOutput:
            $ref: '#/definitions/PaymentProduct840SpecificOutput'
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
  BankAccountIban:
    allOf:
      - $ref: '#/definitions/BankAccount'
      - type: object
        description: "Object containing account holder name and IBAN information"
        additionalProperties: false
        properties:
          iban:
            type: string
            description: "The IBAN is the International Bank Account Number. It is an internationally agreed format for the BBAN and includes the ISO country code and two check digits.\n\nDepends on: Required for the creation of a Payout\n* Required for Create and Update token.\n* Required for payments with product 9000 in Austria (AT) and Germany (DE).\n* Required for Create mandate and Create payment with mandate calls"
  BankAccount:
    type: object
    additionalProperties: false
    properties:
      accountHolderName:
        type: string
        description: "Name in which the account is held."
  PaymentProduct3201SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      card:
        $ref: '#/definitions/CardEssentials'
  PaymentProduct836SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      securityIndicator:
        type: string
  PaymentProduct840SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      customerAccount:
        $ref: '#/definitions/PaymentProduct840CustomerAccount'
      customerAddress:
        $ref: '#/definitions/Address'
      protectionEligibility:
        $ref: '#/definitions/ProtectionEligibility'
  PaymentProduct840CustomerAccount:
    type: object
    additionalProperties: false
    properties:
      accountId:
        type: string
      billingAgreementId:
        type: string
      companyName:
        type: string
      countryCode:
        type: string
      customerAccountStatus:
        type: string
      customerAddressStatus:
        type: string
      firstName:
        type: string
      payerId:
        type: string
      surname:
        type: string
  Address:
    type: object
    description: "Object containing the billing address details"
    additionalProperties: false
    properties:
      additionalInfo:
        type: string
        description: "Additional address information"
      city:
        type: string
        description: "City"
      countryCode:
        type: string
        description: "ISO 3166-1 alpha-2 country code"
      houseNumber:
        type: string
        description: "House number"
      state:
        type: string
        description: "Full name of the state or province"
      stateCode:
        type: string
        description: "ISO 3166-2 alpha-3 state code"
      street:
        type: string
        description: "Street name"
      zip:
        type: string
        description: "Zip code"
  ProtectionEligibility:
    type: object
    additionalProperties: false
    properties:
      eligibility:
        type: string
      type:
        type: string
  SepaDirectDebitPaymentMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificOutput'
      - type: object
        description: "Object containing the SEPA direct debit details"
        additionalProperties: false
        properties:
          fraudResults:
            $ref: '#/definitions/FraudResults'
          paymentProduct771SpecificOutput:
            $ref: '#/definitions/PaymentProduct771SpecificOutput'
  PaymentProduct771SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      mandateReference:
        type: string
  OrderOutput:
    type: object
    additionalProperties: false
    properties:
      amountOfMoney:
        $ref: '#/definitions/AmountOfMoney'
      references:
        $ref: '#/definitions/PaymentReferences'
  AmountOfMoney:
    type: object
    description: "Object containing amount and ISO currency code attributes"
    additionalProperties: false
    properties:
      amount:
        type: integer
        description: "Amount in cents and always having 2 decimals"
        format: int64
      currencyCode:
        type: string
        description: "Three-letter ISO currency code representing the currency for the amount"
  PaymentReferences:
    type: object
    description: "Object that holds all reference properties that are linked to this transaction"
    additionalProperties: false
    properties:
      merchantReference:
        type: string
        description: "Your unique reference of the transaction that is also returned in our report files. This is almost always used for your reconciliation of our report files."
      referenceOrigPayment:
        type: string
        description: "When you did not supply a merchantReference for your payment, you need to fill this property with the reference of the original payment when you want to refund it"
  PaymentStatusOutput:
    description: "This object has the numeric representation of the current payment status, timestamp of last status change and performable action on the current payment resource. In case of failed payments and negative scenarios, detailed error information is listed."
    allOf:
      - $ref: '#/definitions/OrderStatusOutput'
      - type: object
        additionalProperties: false
        properties:
          isAuthorized:
            description: "Indicates if the transaction has been authorized
              \n * true
              \n * false"
            type: boolean
          isRefundable:
            description: "Flag indicating if the payment can be refunded
              \n * true
              \n * false"
            type: boolean
          threeDSecureStatus:
            description: "The 3D Secure status"
            type: string
  OrderStatusOutput:
    type: object
    additionalProperties: false
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/APIError'
      isCancellable:
        description: "Flag indicating if the payment can be cancelled
              \n * true
              \n * false"
        type: boolean
      statusCategory:
        description: "Highlevel status of the payment, payout or refund.
          \n Please see Statuses for a full overview of possible values."
        type: string
      statusCode:
        description: "Numeric status code of the legacy API. It is returned to ease the migration from the legacy APIs. You should not write new business logic based on this property as it will be deprecated in a future version of the API. The value can also be found in the in the BackOffice and in report files."
        type: integer
        format: int32
  APIError:
    description: "Contains detailed information on one single error."
    type: object
    additionalProperties: false
    properties:
      category:
        type: string
        description: "Category the error belongs to. The category should give an indication of the type of error you are dealing with. Possible values:\n* CONNECT_PLATFORM_ERROR - indicating that a functional error has occurred in the platform.\n* PAYMENT_PLATFORM_ERROR - indicating that a functional error has occurred in the Payment platform.\n* IO_ERROR - indicating that a technical error has occurred within the Direct platform or between Direct and any of the payment platforms or third party systems."
      code:
        type: string
        description: "Error code"
      httpStatusCode:
        type: integer
        description: 'HTTP status code for this error that can be used to determine the type of error'
        format: int32
      id:
        type: string
        description: 'ID of the error. This is a short human-readable message that briefly describes the error.'
      message:
        type: string
        description: 'Human-readable error message that is not meant to be relayed to customer as it might tip off people who are trying to commit fraud'
      propertyName:
        type: string
        description: "Returned only if the error relates to a value that was missing or incorrect.\n\nContains a location path to the value as a JSonata query.\n\nSome common examples:\n* a.b selects the value of property b of root property a,\n* a[1] selects the first element of the array in root property a,\n* a[b='some value'] selects all elements of the array in root property a that have a property b with value 'some value'."
      requestId:
        type: string
        description: "ID of the request that can be used for debugging purposes"
  AbstractOrderStatus:
    type: object
    additionalProperties: false
    properties:
      id:
        type: string
        description: "Our unique payment transaction identifier."
  ErrorResponse:
    type: object
    additionalProperties: false
    properties:
      errorId:
        type: string
        description: 'Unique reference, for debugging purposes, of this error response'
      errors:
        type: array
        description: 'List of one or more errors'
        items:
          $ref: '#/definitions/APIError'
          description: "Custom object contains the set of errors"
  CapturesResponse:
    type: object
    additionalProperties: false
    properties:
      captures:
        type: array
        description: "The list of all captures performed on the requested payment."
        items:
          $ref: '#/definitions/Capture'
  Capture:
    allOf:
      - $ref: '#/definitions/AbstractOrderStatus'
      - type: object
        additionalProperties: false
        properties:
          captureOutput:
            $ref: '#/definitions/CaptureOutput'
          status:
            description: "Current high-level status of the payment in a human-readable form."
            type: string
          statusOutput:
            $ref: '#/definitions/CaptureStatusOutput'
  CaptureOutput:
    description: "Object containing capture details"
    allOf:
      - $ref: '#/definitions/OrderOutput'
      - type: object
        additionalProperties: false
        properties:
          cardPaymentMethodSpecificOutput:
            $ref: '#/definitions/CardPaymentMethodSpecificOutput'
          mobilePaymentMethodSpecificOutput:
            $ref: '#/definitions/MobilePaymentMethodSpecificOutput'
          paymentMethod:
            type: string
            description: "Payment method identifier used by the our payment engine"
          redirectPaymentMethodSpecificOutput:
            $ref: '#/definitions/RedirectPaymentMethodSpecificOutput'
  CaptureStatusOutput:
    type: object
    description: "This object has the numeric representation of the current capture status, timestamp of last status change and performable action on the current payment resource. In case of failed payments and negative scenarios, detailed error information is listed."
    additionalProperties: false
    properties:
      statusCode:
        type: integer
        format: int32
        description: "Numeric status code of the legacy API. It is returned to ease the migration from the legacy APIs. You should not write new business logic based on this property as it will be deprecated in a future version of the API. The value can also be found in the BackOffice and in report files."
  CaptureResponse:
    allOf:
      - $ref: '#/definitions/Capture'
      - type: object
        additionalProperties: false
  CapturePaymentRequest:
    type: object
    additionalProperties: false
    properties:
      amount:
        type: integer
        format: int64
        description: "Here you can specify the amount that you want to capture (specified in cents, where single digit currencies are presumed to have 2 digits). The amount can be lower than the amount that was authorized, but not higher.
            \n If left empty, the full amount will be captured and the request will be final.
            \n If the full amount is captured, the request will also be final."
      isFinal:
        type: boolean
        description: "This property indicates whether this will be the final capture of this transaction. The default value for this property is false."
  RefundsResponse:
    type: object
    additionalProperties: false
    properties:
      refunds:
        type: array
        description: "The list of all refunds performed on the requested payment."
        items:
          $ref: '#/definitions/RefundResult'
  RefundResult:
    allOf:
      - $ref: '#/definitions/AbstractOrderStatus'
      - type: object
        additionalProperties: false
        properties:
          refundOutput:
            $ref: '#/definitions/RefundOutput'
          status:
            type: string
            description: "Current high-level status of the refund in a human-readable form."
          statusOutput:
            description: "This object has the numeric representation of the current refund status, timestamp of last status change and performable action on the current refund resource.
            \n In case of a rejected refund, detailed error information is listed."
            $ref: '#/definitions/OrderStatusOutput'
  RefundOutput:
    description: "Object containing refund details"
    allOf:
      - $ref: '#/definitions/OrderOutput'
      - type: object
        additionalProperties: false
        properties:
          cardRefundMethodSpecificOutput:
            $ref: '#/definitions/RefundCardMethodSpecificOutput'
          mobileRefundMethodSpecificOutput:
            $ref: '#/definitions/RefundMobileMethodSpecificOutput'
          eWalletRefundMethodSpecificOutput:
            $ref: '#/definitions/RefundEWalletMethodSpecificOutput'
          paymentMethod:
            type: string
            description: "Payment method identifier used by the our payment engine"
  RefundBankMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/RefundMethodSpecificOutput'
      - type: object
        additionalProperties: false
  RefundMethodSpecificOutput:
    type: object
    additionalProperties: false
    properties:
      totalAmountPaid:
        type: integer
        format: int64
      totalAmountRefunded:
        type: integer
        format: int64
  RefundCardMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/RefundMethodSpecificOutput'
      - type: object
        additionalProperties: false
  RefundEInvoiceMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/RefundMethodSpecificOutput'
      - type: object
        additionalProperties: false
  RefundEWalletMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/RefundMethodSpecificOutput'
      - type: object
        additionalProperties: false
        properties:
          paymentProduct840SpecificOutput:
            $ref: '#/definitions/RefundPaymentProduct840SpecificOutput'
  RefundPaymentProduct840SpecificOutput:
    type: object
    additionalProperties: false
    properties:
      customerAccount:
        $ref: '#/definitions/RefundPaymentProduct840CustomerAccount'
  RefundPaymentProduct840CustomerAccount:
    type: object
    additionalProperties: false
    properties:
      customerAccountStatus:
        type: string
      customerAddressStatus:
        type: string
      payerId:
        type: string
  RefundMobileMethodSpecificOutput:
    allOf:
      - $ref: '#/definitions/RefundMethodSpecificOutput'
      - type: object
        additionalProperties: false
        properties:
          network:
            type: string
  RefundResponse:
    allOf:
      - $ref: '#/definitions/RefundResult'
      - type: object
        additionalProperties: false
  RefundErrorResponse:
    type: object
    additionalProperties: false
    properties:
      errorId:
        type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/APIError'
      refundResult:
        $ref: '#/definitions/RefundResult'
  RefundRequest:
    type: object
    additionalProperties: false
    properties:
      amountOfMoney:
        $ref: '#/definitions/AmountOfMoney'
  BankRefundMethodSpecificInput:
    type: object
    additionalProperties: false
    properties:
      bankAccountBban:
        $ref: '#/definitions/BankAccountBbanRefund'
      bankAccountIban:
        $ref: '#/definitions/BankAccountIban'
      countryCode:
        type: string
  BankAccountBbanRefund:
    allOf:
      - $ref: '#/definitions/BankAccountBban'
      - type: object
        additionalProperties: false
        properties:
          bankCity:
            type: string
          patronymicName:
            type: string
          swiftCode:
            type: string
  BankAccountBban:
    description: "Object that holds the Basic Bank Account Number (BBAN) data"
    allOf:
      - $ref: '#/definitions/BankAccount'
      - type: object
        additionalProperties: false
        properties:
          accountNumber:
            description: "Name of the account holder"
            type: string
          bankCode:
            description: "Bank code"
            type: string
          bankName:
            description: "Name of the bank"
            type: string
          branchCode:
            description: "Branch code"
            type: string
          checkDigit:
            description: "Bank check digit"
            type: string
          countryCode:
            description: "ISO 3166-1 alpha-2 country code of the country where money will be refunded to"
            type: string
  RefundCustomer:
    type: object
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressPersonal'
      companyInformation:
        $ref: '#/definitions/CompanyInformation'
      contactDetails:
        $ref: '#/definitions/ContactDetailsBase'
      fiscalNumber:
        type: string
  AddressPersonal:
    allOf:
      - $ref: '#/definitions/Address'
      - type: object
        additionalProperties: false
        properties:
          name:
            $ref: '#/definitions/PersonalName'
  PersonalName:
    allOf:
      - $ref: '#/definitions/PersonalNameBase'
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
  PersonalNameBase:
    type: object
    description: "Given name(s) or first name(s) of the customer"
    additionalProperties: false
    properties:
      firstName:
        type: string
        description: "Given name(s) or first name(s) of the customer"
      surname:
        type: string
        description: "Surname(s) or last name(s) of the customer"
      surnamePrefix:
        type: string
        description: "Middle name - In between first name and surname - of the customer"
  CompanyInformation:
    description: "Object containing company information"
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        description: "Name of company, as a customer"
  ContactDetailsBase:
    type: object
    additionalProperties: false
    properties:
      emailAddress:
        description: "Email address of the customer"
        type: string
      emailMessageType:
        description: "Preference for the type of email message markup (plain-text, html)"
        type: string
  RefundReferences:
    type: object
    description: "Object that holds all reference properties that are linked to this refund"
    additionalProperties: false
    properties:
      merchantReference:
        description: "Your unique reference of the transaction that is also returned in our report files. This is almost always used for your reconciliation of our report files."
        type: string
  SessionResponse:
    type: object
    additionalProperties: false
    properties:
      assetUrl:
        type: string
      clientApiUrl:
        type: string
      clientSessionId:
        type: string
      customerId:
        type: string
      invalidTokens:
        type: array
        items:
          type: string
      region:
        type: string
  SessionRequest:
    type: object
    additionalProperties: false
    properties:
      paymentProductFilters:
        $ref: '#/definitions/PaymentProductFiltersClientSession'
      tokens:
        type: array
        items:
          type: string
  PaymentProductFiltersClientSession:
    type: object
    additionalProperties: false
    properties:
      exclude:
        $ref: '#/definitions/PaymentProductFilter'
      restrictTo:
        $ref: '#/definitions/PaymentProductFilter'
  PaymentProductFilter:
    type: object
    additionalProperties: false
    properties:
      groups:
        type: array
        items:
          type: string
      products:
        type: array
        items:
          type: integer
          format: int32
  CreateHostedCheckoutResponse:
    type: object
    additionalProperties: false
    properties:
      returnmac:
        type: string
      hostedCheckoutId:
        type: string
      invalidTokens:
        type: array
        items:
          type: string
      merchantReference:
        type: string
      partialRedirectUrl:
        type: string
  CreateHostedCheckoutRequest:
    type: object
    additionalProperties: false
    properties:
      cardPaymentMethodSpecificInput:
        $ref: '#/definitions/CardPaymentMethodSpecificInputBase'
      fraudFields:
        $ref: '#/definitions/FraudFields'
      hostedCheckoutSpecificInput:
        $ref: '#/definitions/HostedCheckoutSpecificInput'
      order:
        $ref: '#/definitions/Order'
      redirectPaymentMethodSpecificInput:
        $ref: '#/definitions/RedirectPaymentMethodSpecificInputBase'
  BankTransferPaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractBankTransferPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  AbstractBankTransferPaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          additionalReference:
            type: string
  AbstractPaymentMethodSpecificInput:
    type: object
    additionalProperties: false
    properties:
      paymentProductId:
        description: "Payment product identifier
          \n Please see payment products for a full overview of possible values."
        type: integer
        format: int32
  CardPaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractCardPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  AbstractCardPaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          authorizationMode:
            type: string
            description: "Determines the type of the authorization that will be used. Allowed values:
                \n * FINAL_AUTHORIZATION - The payment creation results in an authorization that is ready for capture. Final authorizations can't be reversed and need to be captured for the full amount within 7 days.
                \n * PRE_AUTHORIZATION - The payment creation results in a pre-authorization that is ready for capture. Pre-authortizations can be reversed and can be captured within 30 days. The capture amount can be lower than the authorized amount.
                \n * SALE - The payment creation results in an authorization that is already captured at the moment of approval.
                \n\n Only used with some acquirers, ingnored for acquirers that don't support this. In case the acquirer doesn't allow this to be specified the authorizationMode is 'unspecified', which behaves similar to a final authorization."
          customerReference:
            type: string
            description: "Reference of the customer for the payment (purchase order #, etc.). Only used with some acquirers."
          recurringPaymentSequenceIndicator:
            type: string
          requiresApproval:
            type: boolean
            description: "true = the payment requires approval before the funds will be captured using the Approve payment or Capture payment API
                  \n * false = the payment does not require approval, and the funds will be captured automatically"
          skipAuthentication:
            type: boolean
          skipFraudService:
            type: boolean
            description: "
                \n * true = Fraud scoring will be skipped for this transaction
                \n * false = Fraud scoring will not be skipped for this transaction
                \n\n Note: This is only possible if your account in our system is setup for Fraud scoring and if your configuration in our system allows you to override it per transaction."
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
          tokenize:
            type: boolean
            description: "Indicates if this transaction should be tokenized
                \n * true - Tokenize the transaction.
                \n * false - Do not tokenize the transaction, unless it would be tokenized by other means such as auto-tokenization of recurring payments."
          transactionChannel:
            type: string
            description: "Indicates the channel via which the payment is created. Allowed values:
                \n * ECOMMERCE - The transaction is a regular E-Commerce transaction.
                \n * MAIL - The transaction is a Mail Order.
                \n * MOTO - The transaction is a Mail Order/Telephone Order.
                \n * TELEPHONE - The transaction is a Telephone Order.
                \n Defaults to ECOMMERCE."
          unscheduledCardOnFileIndicator:
            type: string
            description: "
                \n * first = This transaction is the first of a series of unscheduled recurring transactions
                \n * subsequent = This transaction is a subsequent transaction in a series of unscheduled recurring transactions
                \n\n Note: this property is not allowed if isRecurring is true."
          unscheduledCardOnFileRequestor:
            type: string
            description: "Indicates which party initiated the unscheduled recurring transaction. Allowed values:
                \n * merchantInitiated - Merchant Initiated Transaction.
                \n * cardholderInitiated - Cardholder Initiated Transaction.

                \n\n Note: this property is not allowed if isRecurring is true.
                \n\n  Depends on:
                \n Required when unscheduledCardOnFileIndicator is 'subsequent'. Otherwise it must not be 'merchantInitiated'."
  CashPaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractCashPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  AbstractCashPaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  EInvoicePaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractEInvoicePaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  AbstractEInvoicePaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          requiresApproval:
            type: boolean
  FraudFields:
    description: "Object containing additional data that will be used to assess the risk of fraud"
    type: object
    additionalProperties: false
    properties:
      addressesAreIdentical:
        type: boolean
      blackListData:
        type: string
      cardOwnerAddress:
        $ref: '#/definitions/Address'
      customerIpAddress:
        type: string
      defaultFormFill:
        type: string
      deviceFingerprintActivated:
        type: boolean
      deviceFingerprintTransactionId:
        type: string
      giftCardType:
        type: string
      giftMessage:
        type: string
      hasForgottenPwd:
        type: boolean
      hasPassword:
        type: boolean
      isPreviousCustomer:
        type: boolean
      orderTimezone:
        type: string
      shipComments:
        type: string
      shipmentTrackingNumber:
        type: string
      shippingDetails:
        $ref: '#/definitions/FraudFieldsShippingDetails'
      userData:
        type: array
        items:
          type: string
      website:
        type: string
  FraudFieldsShippingDetails:
    type: object
    additionalProperties: false
    properties:
      methodDetails:
        type: string
      methodSpeed:
        type: integer
        format: int32
      methodType:
        type: integer
        format: int32
  HostedCheckoutSpecificInput:
    type: object
    additionalProperties: false
    properties:
      isRecurring:
        type: boolean
      locale:
        type: string
      paymentProductFilters:
        $ref: '#/definitions/PaymentProductFiltersHostedCheckout'
      returnCancelState:
        type: boolean
      returnUrl:
        type: string
      showResultPage:
        type: boolean
      tokens:
        type: string
      validateShoppingCart:
        type: boolean
      variant:
        type: string
  PaymentProductFiltersHostedCheckout:
    type: object
    additionalProperties: false
    properties:
      exclude:
        $ref: '#/definitions/PaymentProductFilter'
      restrictTo:
        $ref: '#/definitions/PaymentProductFilter'
      tokensOnly:
        type: boolean
  Order:
    type: object
    description: "Order object containing order related data
      \n Please note that this object is required to be able to submit the amount."
    additionalProperties: false
    properties:
      additionalInput:
        $ref: '#/definitions/AdditionalOrderInput'
      amountOfMoney:
        $ref: '#/definitions/AmountOfMoney'
      customer:
        $ref: '#/definitions/Customer'
      items:
        type: array
        items:
          $ref: '#/definitions/LineItem'
      references:
        $ref: '#/definitions/OrderReferences'
      seller:
        $ref: '#/definitions/Seller'
      shoppingCart:
        $ref: '#/definitions/ShoppingCart'
  AdditionalOrderInput:
    type: object
    additionalProperties: false
    properties:
      airlineData:
        $ref: '#/definitions/AirlineData'
      level3SummaryData:
        $ref: '#/definitions/Level3SummaryData'
      numberOfInstallments:
        type: integer
        format: int64
      orderDate:
        type: string
      typeInformation:
        $ref: '#/definitions/OrderTypeInformation'
  AirlineData:
    type: object
    additionalProperties: false
    properties:
      agentNumericCode:
        type: string
      code:
        type: string
      flightDate:
        type: string
      flightLegs:
        type: array
        items:
          $ref: '#/definitions/AirlineFlightLeg'
      invoiceNumber:
        type: string
      isETicket:
        type: boolean
      isRegisteredCustomer:
        type: boolean
      isRestrictedTicket:
        type: boolean
      isThirdParty:
        type: boolean
      issueDate:
        type: string
      merchantCustomerId:
        type: string
      name:
        type: string
      passengerName:
        type: string
      passengers:
        type: array
        items:
          $ref: '#/definitions/AirlinePassenger'
      placeOfIssue:
        type: string
      pnr:
        type: string
      pointOfSale:
        type: string
      posCityCode:
        type: string
      ticketDeliveryMethod:
        type: string
      ticketNumber:
        type: string
      totalFare:
        type: integer
        format: int32
      totalFee:
        type: integer
        format: int32
      totalTaxes:
        type: integer
        format: int32
      travelAgencyName:
        type: string
  AirlineFlightLeg:
    type: object
    additionalProperties: false
    properties:
      airlineClass:
        type: string
      arrivalAirport:
        type: string
      arrivalTime:
        type: string
      carrierCode:
        type: string
      conjunctionTicket:
        type: string
      couponNumber:
        type: string
      date:
        type: string
      departureTime:
        type: string
      endorsementOrRestriction:
        type: string
      exchangeTicket:
        type: string
      fare:
        type: string
      fareBasis:
        type: string
      fee:
        type: integer
        format: int32
      flightNumber:
        type: string
      number:
        type: integer
        format: int32
      originAirport:
        type: string
      passengerClass:
        type: string
      serviceClass:
        type: string
      stopoverCode:
        type: string
      taxes:
        type: integer
        format: int32
  AirlinePassenger:
    type: object
    additionalProperties: false
    properties:
      firstName:
        type: string
      surname:
        type: string
      surnamePrefix:
        type: string
      title:
        type: string
  Level3SummaryData:
    type: object
    additionalProperties: false
    properties:
      discountAmount:
        type: integer
        format: int64
      dutyAmount:
        type: integer
        format: int64
      shippingAmount:
        type: integer
        format: int64
  OrderTypeInformation:
    type: object
    additionalProperties: false
    properties:
      purchaseType:
        type: string
      usageType:
        type: string
  Customer:
    allOf:
      - $ref: '#/definitions/CustomerBase'
      - type: object
        additionalProperties: false
        properties:
          billingAddress:
            $ref: '#/definitions/Address'
          contactDetails:
            $ref: '#/definitions/ContactDetails'
          fiscalNumber:
            description: "Fiscal registration number of the customer (CPF) with a length of 11 or the tax registration number of the company for a business customer (CNPJ) with a length of 14."
            type: string
          locale:
            type: string
          personalInformation:
            $ref: '#/definitions/PersonalInformation'
          shippingAddress:
            $ref: '#/definitions/AddressPersonal'
  ContactDetails:
    description: "Object containing contact details like email address and phone number"
    allOf:
      - $ref: '#/definitions/ContactDetailsBase'
      - type: object
        additionalProperties: false
        properties:
          faxNumber:
            type: string
          phoneNumber:
            type: string
  PersonalInformation:
    type: object
    description: "Object containing personal information of the customer"
    additionalProperties: false
    properties:
      dateOfBirth:
        type: string
      gender:
        type: string
      name:
        $ref: '#/definitions/PersonalName'
  CustomerBase:
    type: object
    additionalProperties: false
    properties:
      companyInformation:
        $ref: '#/definitions/CompanyInformation'
      merchantCustomerId:
        type: string
      vatNumber:
        description: "Local VAT number of the company"
        type: string
  LineItem:
    type: object
    additionalProperties: false
    properties:
      amountOfMoney:
        $ref: '#/definitions/AmountOfMoney'
      invoiceData:
        $ref: '#/definitions/LineItemInvoiceData'
      level3InterchangeInformation:
        $ref: '#/definitions/LineItemLevel3InterchangeInformation'
      orderLineDetails:
        $ref: '#/definitions/OrderLineDetails'
  LineItemInvoiceData:
    type: object
    additionalProperties: false
    properties:
      description:
        type: string
      merchantLinenumber:
        type: string
      merchantPagenumber:
        type: string
      nrOfItems:
        type: string
      pricePerItem:
        type: integer
        format: int64
  LineItemLevel3InterchangeInformation:
    type: object
    additionalProperties: false
    properties:
      discountAmount:
        type: integer
        format: int64
      lineAmountTotal:
        type: integer
        format: int64
      productCode:
        type: string
      productPrice:
        type: integer
        format: int64
      productType:
        type: string
      quantity:
        type: integer
        format: int64
      taxAmount:
        type: integer
        format: int64
      unit:
        type: string
  OrderLineDetails:
    type: object
    additionalProperties: false
    properties:
      discountAmount:
        type: integer
        format: int64
      googleProductCategoryId:
        type: integer
        format: int64
      lineAmountTotal:
        type: integer
        format: int64
      productCategory:
        type: string
      productCode:
        type: string
      productName:
        type: string
      productPrice:
        type: integer
        format: int64
      productType:
        type: string
      quantity:
        type: integer
        format: int64
      taxAmount:
        type: integer
        format: int64
      unit:
        type: string
  OrderReferences:
    type: object
    additionalProperties: false
    properties:
      descriptor:
        type: string
      invoiceData:
        $ref: '#/definitions/OrderInvoiceData'
      merchantOrderId:
        type: integer
        format: int64
      merchantReference:
        type: string
  OrderInvoiceData:
    type: object
    additionalProperties: false
    properties:
      additionalData:
        type: string
      invoiceDate:
        type: string
      invoiceNumber:
        type: string
      textQualifiers:
        type: array
        items:
          type: string
  Seller:
    type: object
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/Address'
      channelCode:
        type: string
      description:
        type: string
      geocode:
        type: string
      id:
        type: string
      invoiceNumber:
        type: string
      mcc:
        type: string
      name:
        type: string
      type:
        type: string
  ShoppingCart:
    type: object
    additionalProperties: false
    properties:
      amountBreakdown:
        type: array
        items:
          $ref: '#/definitions/AmountBreakdown'
      items:
        type: array
        items:
          $ref: '#/definitions/LineItem'
  AmountBreakdown:
    type: object
    additionalProperties: false
    properties:
      amount:
        type: integer
        format: int64
      type:
        type: string
  RedirectPaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractRedirectPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  AbstractRedirectPaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          expirationPeriod:
            type: integer
            format: int32
          recurringPaymentSequenceIndicator:
            type: string
          requiresApproval:
            type: boolean
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
          tokenize:
            type: boolean
  SepaDirectDebitPaymentMethodSpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractSepaDirectDebitPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          paymentProduct771SpecificInput:
            $ref: '#/definitions/SepaDirectDebitPaymentProduct771SpecificInputBase'
  SepaDirectDebitPaymentProduct771SpecificInputBase:
    allOf:
      - $ref: '#/definitions/AbstractSepaDirectDebitPaymentProduct771SpecificInput'
      - type: object
        additionalProperties: false
        properties:
          mandate:
            $ref: '#/definitions/CreateMandateBase'
  CreateMandateBase:
    type: object
    additionalProperties: false
    properties:
      alias:
        type: string
      customer:
        $ref: '#/definitions/MandateCustomer'
      customerReference:
        type: string
      language:
        type: string
      recurrenceType:
        type: string
      signatureType:
        type: string
      uniqueMandateReference:
        type: string
  MandateCustomer:
    type: object
    additionalProperties: false
    properties:
      bankAccountIban:
        $ref: '#/definitions/BankAccountIban'
      companyName:
        type: string
      contactDetails:
        $ref: '#/definitions/MandateContactDetails'
      mandateAddress:
        $ref: '#/definitions/MandateAddress'
      personalInformation:
        $ref: '#/definitions/MandatePersonalInformation'
  MandateContactDetails:
    type: object
    additionalProperties: false
    properties:
      emailAddress:
        type: string
  MandateAddress:
    type: object
    additionalProperties: false
    properties:
      city:
        type: string
      countryCode:
        type: string
      houseNumber:
        type: string
      street:
        type: string
      zip:
        type: string
  MandatePersonalInformation:
    type: object
    additionalProperties: false
    properties:
      name:
        $ref: '#/definitions/MandatePersonalName'
      title:
        type: string
  MandatePersonalName:
    type: object
    additionalProperties: false
    properties:
      firstName:
        type: string
      surname:
        type: string
  AbstractSepaDirectDebitPaymentProduct771SpecificInput:
    type: object
    additionalProperties: false
    properties:
      mandateReference:
        type: string
  AbstractSepaDirectDebitPaymentMethodSpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  GetHostedCheckoutResponse:
    type: object
    additionalProperties: false
    properties:
      createdPaymentOutput:
        $ref: '#/definitions/CreatedPaymentOutput'
      status:
        type: string
  CreatedPaymentOutput:
    type: object
    additionalProperties: false
    properties:
      displayedData:
        $ref: '#/definitions/DisplayedData'
      payment:
        $ref: '#/definitions/Payment'
      paymentCreationReferences:
        $ref: '#/definitions/PaymentCreationReferences'
      paymentStatusCategory:
        type: string
      tokenizationSucceeded:
        type: boolean
      tokens:
        type: string
  DisplayedData:
    type: object
    additionalProperties: false
    properties:
      displayedDataType:
        type: string
      renderingData:
        type: string
      showData:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair'
  KeyValuePair:
    type: object
    additionalProperties: false
    properties:
      key:
        type: string
      value:
        type: string
  PaymentCreationReferences:
    type: object
    additionalProperties: false
    properties:
      additionalReference:
        type: string
        description: "The additional reference identifier for this transaction. Data in this property will also be returned in our report files, allowing you to reconcile them."
      externalReference:
        type: string
        description: "The external reference identifier for this transaction. Data in this property will also be returned in our report files, allowing you to reconcile them."
  PaymentResponse:
    allOf:
      - $ref: '#/definitions/Payment'
      - type: object
        additionalProperties: false
  CreatePaymentResponse:
    allOf:
      - $ref: '#/definitions/CreatePaymentResult'
      - type: object
        additionalProperties: false
  CreatePaymentResult:
    type: object
    description: "Object that contains details on the created payment in case one has been created."
    additionalProperties: false
    properties:
      creationOutput:
        $ref: '#/definitions/PaymentCreationOutput'
      merchantAction:
        $ref: '#/definitions/MerchantAction'
      payment:
        $ref: '#/definitions/Payment'
  PaymentCreationOutput:
    description: "Object containing the details of the created payment."
    allOf:
      - $ref: '#/definitions/PaymentCreationReferences'
      - type: object
        additionalProperties: false
        properties:
          isNewToken:
            type: boolean
            description: "Indicates if a new token was created
                \n * true - A new token was created
                \n * false - A token with the same card number already exists and is returned. Please note that the existing token has not been updated. When you want to update other data then the card number, you need to update data stored in the token explicitly, as data is never updated during the creation of a token."
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
          tokenizationSucceeded:
            type: boolean
            description: "Indicates if tokenization was successful or not. If this value is false, then the token and isNewToken properties will not be set."
  MerchantAction:
    type: object
    description: "Object that contains the action, including the needed data, that you should perform next, like showing instructions, showing the transaction results or redirect to a third party to complete the payment"
    additionalProperties: false
    properties:
      actionType:
        type: string
        description: "Action merchants needs to take in the online payment process. Possible values are:
            \n * REDIRECT - The customer needs to be redirected using the details found in redirectData
            \n * SHOW_FORM - The customer needs to be shown a form with the fields found in formFields. You can submit the data entered by the user in a Complete payment request.
            \n * SHOW_INSTRUCTIONS - The customer needs to be shown payment instruction using the details found in showData. Alternatively the instructions can be rendered by us using the instructionsRenderingData
            \n * SHOW_TRANSACTION_RESULTS - The customer needs to be shown the transaction results using the details found in showData. Alternatively the instructions can be rendered by us using the instructionsRenderingData
            \n * MOBILE_THREEDS_CHALLENGE - The customer needs to complete a challenge as part of the 3D Secure authentication inside your mobile app. The details contained in mobileThreeDSecureChallengeParameters need to be provided to the EMVco certified Mobile SDK as a challengeParameters object.
            \n * CALL_THIRD_PARTY - The merchant needs to call a third party using the data found in thirdPartyData"
      formFields:
        type: array
        items:
          $ref: '#/definitions/PaymentProductField'
      redirectData:
        $ref: '#/definitions/RedirectData'
      renderingData:
        type: string
      showData:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair'
  PaymentProductField:
    type: object
    description: "Populated only when the actionType of the merchantAction is SHOW_FORM. In this case, this property contains the list of fields to render, in the format that is also used in the response of Get payment product."
    additionalProperties: false
    properties:
      dataRestrictions:
        $ref: '#/definitions/PaymentProductFieldDataRestrictions'
      displayHints:
        $ref: '#/definitions/PaymentProductFieldDisplayHints'
      id:
        type: string
      type:
        type: string
      usedForLookup:
        type: boolean
  PaymentProductFieldDataRestrictions:
    type: object
    description: "Object containing data restrictions that apply to this field, like minimum and/or maximum length"
    additionalProperties: false
    properties:
      isRequired:
        type: boolean
        description: "
            \n * true - Indicates that this field is required
            \n * false - Indicates that this field is optional"
      validators:
        $ref: '#/definitions/PaymentProductFieldValidators'
  PaymentProductFieldValidators:
    type: object
    additionalProperties: false
    properties:
      boletoBancarioRequiredness:
        $ref: '#/definitions/BoletoBancarioRequirednessValidator'
      emailAddress:
        $ref: '#/definitions/EmptyValidator'
      expirationDate:
        $ref: '#/definitions/EmptyValidator'
      fixedList:
        $ref: '#/definitions/FixedListValidator'
      iban:
        $ref: '#/definitions/EmptyValidator'
      length:
        $ref: '#/definitions/LengthValidator'
      luhn:
        $ref: '#/definitions/EmptyValidator'
      range:
        $ref: '#/definitions/RangeValidator'
      regularExpression:
        $ref: '#/definitions/RegularExpressionValidator'
      termsAndConditions:
        $ref: '#/definitions/EmptyValidator'
  BoletoBancarioRequirednessValidator:
    type: object
    additionalProperties: false
    properties:
      fiscalNumberLength:
        type: integer
        format: int32
  EmptyValidator:
    type: object
    additionalProperties: false
  FixedListValidator:
    type: object
    additionalProperties: false
    properties:
      allowedValues:
        type: array
        items:
          type: string
  LengthValidator:
    type: object
    additionalProperties: false
    properties:
      maxLength:
        type: integer
        format: int32
      minLength:
        type: integer
        format: int32
  RangeValidator:
    type: object
    additionalProperties: false
    properties:
      maxValue:
        type: integer
        format: int32
      minValue:
        type: integer
        format: int32
  RegularExpressionValidator:
    type: object
    additionalProperties: false
    properties:
      regularExpression:
        type: string
  PaymentProductFieldDisplayHints:
    type: object
    description: "Object containing display hints for this field, like the order, mask, preferred keyboard"
    additionalProperties: false
    properties:
      alwaysShow:
        type: boolean
        description: "
            \n * true - Indicates that this field is advised to be captured to increase the success rates even though it isn't marked as required. Please note that making the field required could hurt the success rates negatively. This boolean only indicates our advise to always show this field to the customer.
            \n * false - Indicates that this field is not to be shown unless it is a required field."
      displayOrder:
        type: integer
        format: int32
        description: "The order in which the fields should be shown (ascending)"
      formElement:
        $ref: '#/definitions/PaymentProductFieldFormElement'
      label:
        type: string
      link:
        type: string
      mask:
        type: string
      obfuscate:
        type: boolean
      placeholderLabel:
        type: string
      preferredInputType:
        type: string
      tooltip:
        $ref: '#/definitions/PaymentProductFieldTooltip'
  PaymentProductFieldFormElement:
    type: object
    additionalProperties: false
    properties:
      type:
        type: string
      valueMapping:
        type: array
        items:
          $ref: '#/definitions/ValueMappingElement'
  ValueMappingElement:
    type: object
    additionalProperties: false
    properties:
      displayElements:
        type: array
        items:
          $ref: '#/definitions/PaymentProductFieldDisplayElement'
      displayName:
        type: string
      value:
        type: string
  PaymentProductFieldDisplayElement:
    type: object
    additionalProperties: false
    properties:
      id:
        type: string
      label:
        type: string
      type:
        type: string
      value:
        type: string
  PaymentProductFieldTooltip:
    type: object
    additionalProperties: false
    properties:
      image:
        type: string
      label:
        type: string
  RedirectData:
    allOf:
      - $ref: '#/definitions/RedirectDataBase'
      - type: object
        additionalProperties: false
  RedirectDataBase:
    type: object
    additionalProperties: false
    properties:
      returnmac:
        type: string
      redirectURL:
        type: string
  PaymentErrorResponse:
    type: object
    additionalProperties: false
    properties:
      errorId:
        type: string
        description: "Unique reference, for debugging purposes, of this error response"
      errors:
        type: array
        items:
          $ref: '#/definitions/APIError'
      paymentResult:
        $ref: '#/definitions/CreatePaymentResult'
  CreatePaymentRequest:
    type: object
    additionalProperties: false
    properties:
      cardPaymentMethodSpecificInput:
        $ref: '#/definitions/CardPaymentMethodSpecificInput'
      mobilePaymentMethodSpecificInput:
        $ref: '#/definitions/MobilePaymentMethodSpecificInput'
      redirectPaymentMethodSpecificInput:
        $ref: '#/definitions/RedirectPaymentMethodSpecificInput'
      fraudFields:
        $ref: '#/definitions/FraudFields'
      order:
        $ref: '#/definitions/Order'
  BankTransferPaymentMethodSpecificInput:
    description: "Object containing the specific input details for bank transfer payments"
    allOf:
      - $ref: '#/definitions/AbstractBankTransferPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
  CardPaymentMethodSpecificInput:
    description: "Object containing the specific input details for card payments"
    allOf:
      - $ref: '#/definitions/AbstractCardPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          card:
            $ref: '#/definitions/Card'
          externalCardholderAuthenticationData:
            $ref: '#/definitions/ExternalCardholderAuthenticationData'
          isRecurring:
            type: boolean
          returnUrl:
            type: string
  Card:
    allOf:
      - $ref: '#/definitions/CardWithoutCvv'
      - type: object
        additionalProperties: false
        properties:
          cvv:
            type: string
            description: "Card Verification Value, a 3 or 4 digit code used as an additional security feature for card not present transactions."
  CardWithoutCvv:
    description: "Object containing the card details (without CVV)"
    allOf:
      - $ref: '#/definitions/CardEssentials'
      - type: object
        additionalProperties: false
        properties:
          cardholderName:
            type: string
            description: "The card holder's name on the card."
          issueNumber:
            type: string
            description: "Issue number on the card (if applicable)"
  ExternalCardholderAuthenticationData:
    type: object
    additionalProperties: false
    properties:
      cavv:
        type: string
      cavvAlgorithm:
        type: string
      eci:
        type: integer
        format: int32
      validationResult:
        type: string
      xid:
        type: string
  CashPaymentMethodSpecificInput:
    description: "Object containing the specific input details for cash payments"
    allOf:
      - $ref: '#/definitions/AbstractCashPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          paymentProduct1503SpecificInput:
            $ref: '#/definitions/CashPaymentProduct1503SpecificInput'
          paymentProduct1504SpecificInput:
            $ref: '#/definitions/CashPaymentProduct1504SpecificInput'
  CashPaymentProduct1503SpecificInput:
    type: object
    additionalProperties: false
    properties:
      returnUrl:
        type: string
  CashPaymentProduct1504SpecificInput:
    type: object
    additionalProperties: false
    properties:
      returnUrl:
        type: string
  NonSepaDirectDebitPaymentMethodSpecificInput:
    description: "Object containing the specific input details for direct debit payments"
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          dateCollect:
            type: string
          directDebitText:
            type: string
          isRecurring:
            type: boolean
          paymentProduct705SpecificInput:
            $ref: '#/definitions/NonSepaDirectDebitPaymentProduct705SpecificInput'
          paymentProduct730SpecificInput:
            $ref: '#/definitions/NonSepaDirectDebitPaymentProduct730SpecificInput'
          recurringPaymentSequenceIndicator:
            type: string
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
          tokenize:
            type: boolean
  NonSepaDirectDebitPaymentProduct705SpecificInput:
    type: object
    additionalProperties: false
    properties:
      authorisationId:
        type: string
      bankAccountBban:
        $ref: '#/definitions/BankAccountBban'
      transactionType:
        type: string
  NonSepaDirectDebitPaymentProduct730SpecificInput:
    type: object
    additionalProperties: false
    properties:
      bankAccountBban:
        $ref: '#/definitions/BankAccountBban'
  EInvoicePaymentMethodSpecificInput:
    description: "Object containing the specific input details for e-invoice payments"
    allOf:
      - $ref: '#/definitions/AbstractEInvoicePaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          acceptedTermsAndConditions:
            type: boolean
          paymentProduct9000SpecificInput:
            $ref: '#/definitions/EInvoicePaymentProduct9000SpecificInput'
  EInvoicePaymentProduct9000SpecificInput:
    type: object
    additionalProperties: false
    properties:
      bankAccountIban:
        $ref: '#/definitions/BankAccountIban'
      installmentId:
        type: string
  InvoicePaymentMethodSpecificInput:
    description: "Object containing the specific input details for invoice payments"
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          additionalReference:
            type: string
  MobilePaymentMethodSpecificInput:
    description: "Object containing the specific input details for mobile payments"
    allOf:
      - $ref: '#/definitions/AbstractPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          authorizationMode:
            type: string
            description: "Determines the type of the authorization that will be used. Allowed values:
                \n * FINAL_AUTHORIZATION - The payment creation results in an authorization that is ready for capture. Final authorizations can't be reversed and need to be captured for the full amount within 7 days.
                \n * PRE_AUTHORIZATION - The payment creation results in a pre-authorization that is ready for capture. Pre-authortizations can be reversed and can be captured within 30 days. The capture amount can be lower than the authorized amount.
                \n * SALE - The payment creation results in an authorization that is already captured at the moment of approval.
                \n\n Only used with some acquirers, ingnored for acquirers that don't support this. In case the acquirer doesn't allow this to be specified the authorizationMode is 'unspecified', which behaves similar to a final authorization."
          decryptedPaymentData:
            $ref: '#/definitions/DecryptedPaymentData'
          encryptedPaymentData:
            type: string
            description: "The payment data if we will do the decryption of the encrypted payment data.
                \n Typically you'd use encryptedCustomerInput in the root of the create payment request to provide the encrypted payment data instead.

                \n * For Apple Pay, the encrypted payment data can be found in property data of the PKPayment.token.paymentData property."
          requiresApproval:
            type: boolean
          skipFraudService:
            type: boolean
            description: "
                \n * true = Fraud scoring will be skipped for this transaction
                \n * false = Fraud scoring will not be skipped for this transaction
                \n\n Note: This is only possible if your account in our system is setup for Fraud scoring and if your configuration in our system allows you to override it per transaction."
          transactionId:
            type: string
  DecryptedPaymentData:
    type: object
    description: "The payment data if you do the decryption of the encrypted payment data yourself."
    additionalProperties: false
    properties:
      cardholderName:
        type: string
        description: "Card holder's name on the card.
            \n * For Apple Pay, maps to the cardholderName property in the encrypted payment data."
      cryptogram:
        type: string
        description: "The 3D secure online payment cryptogram.
            \n * For Apple Pay, maps to the paymentData.onlinePaymentCryptogram property in the encrypted payment data."
      dpan:
        type: string
        description: "The device specific PAN.
            \n * For Apple Pay, maps to the applicationPrimaryAccountNumber property in the encrypted payment."
      eci:
        type: integer
        format: int32
        description: "Electronic Commerce Indicator.
            \n * For Apple Pay, maps to the paymentData.eciIndicator property in the encrypted payment data."
      expiryDate:
        type: string
        description: "Expiry date of the card Format: MMYY.
            \n * For Apple Pay, maps to the applicationExpirationDate property in the encrypted payment data. This property is formatted as YYMMDD, so this needs to be converted to get a correctly formatted expiry date"
  MobilePaymentProduct320SpecificInput:
    type: object
    additionalProperties: false
    properties:
      keyId:
        type: string
  RedirectPaymentMethodSpecificInput:
    description: "Object containing the specific input details for payments that involve redirects to 3rd parties to complete, like PayPal"
    allOf:
      - $ref: '#/definitions/AbstractRedirectPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          isRecurring:
            type: boolean
          paymentProduct840SpecificInput:
            $ref: '#/definitions/RedirectPaymentProduct840SpecificInput'
          returnUrl:
            type: string
  RedirectPaymentProduct809SpecificInput:
    type: object
    additionalProperties: false
    properties:
      expirationPeriod:
        type: string
      issuerId:
        type: string
  RedirectPaymentProduct816SpecificInput:
    type: object
    additionalProperties: false
    properties:
      bankAccountIban:
        $ref: '#/definitions/BankAccountIban'
  RedirectPaymentProduct840SpecificInput:
    type: object
    description: "Object containing specific input required for PayPal payments (Payment product ID 840)"
    additionalProperties: false
    properties:
      custom:
        type: string
        description: "For payments processed by the Ingenico Ogone Payment Platform, indicates whether to allow the customer to select an address on the PayPal website.
          \n * true = Address can be selected at PayPal
          \n * false = No address can be selected at PayPal"
  RedirectPaymentProduct863SpecificInput:
    type: object
    additionalProperties: false
    properties:
      integrationType:
        type: string
  RedirectPaymentProduct882SpecificInput:
    type: object
    additionalProperties: false
    properties:
      issuerId:
        type: string
  SepaDirectDebitPaymentMethodSpecificInput:
    description: "Object containing the specific input details for SEPA direct debit payments"
    allOf:
      - $ref: '#/definitions/AbstractSepaDirectDebitPaymentMethodSpecificInput'
      - type: object
        additionalProperties: false
        properties:
          dateCollect:
            type: string
          directDebitText:
            type: string
          isRecurring:
            type: boolean
          paymentProduct771SpecificInput:
            $ref: '#/definitions/SepaDirectDebitPaymentProduct771SpecificInput'
          recurringPaymentSequenceIndicator:
            type: string
          token:
            type: string
            description: "ID of the token. This property is populated when the payment was done with a token or when the payment was tokenized."
          tokenize:
            type: boolean
  SepaDirectDebitPaymentProduct771SpecificInput:
    allOf:
      - $ref: '#/definitions/AbstractSepaDirectDebitPaymentProduct771SpecificInput'
      - type: object
        additionalProperties: false
        properties:
          mandate:
            $ref: '#/definitions/CreateMandateWithReturnUrl'
  CreateMandateWithReturnUrl:
    allOf:
      - $ref: '#/definitions/CreateMandateBase'
      - type: object
        additionalProperties: false
        properties:
          returnUrl:
            type: string
  TokenResponse:
    type: object
    properties:
      card:
        $ref: '#/definitions/TokenCard'
      eWallet:
        $ref: '#/definitions/TokenEWallet'
      id:
        type: string
        description: "ID of the token"
      paymentProductId:
        format: int32
        type: integer
        description: "Payment product identifier"
  TokenCard:
    type: object
    description: "Object containing card details"
    properties:
      customer:
        $ref: '#/definitions/CustomerToken'
      data:
        $ref: '#/definitions/TokenCardData'
      alias:
        type: string
        description: "An alias for the token. This can be used to visually represent the token.
            \n If no alias is given in Create token calls, a payment product specific default is used, e.g. the obfuscated card number for card payment products.
            \n Do not include any unobfuscated sensitive data in the alias."
  TokenEWallet:
    type: object
    description: "Object containing eWallet details"
    properties:
      customer:
        $ref: '#/definitions/CustomerToken'
      data:
        $ref: '#/definitions/TokenEWalletData'
      alias:
        type: string
        description: "An alias for the token. This can be used to visually represent the token.
            \n If no alias is given in Create token calls, a payment product specific default is used, e.g. the obfuscated card number for card payment products.
            \n Do not include any unobfuscated sensitive data in the alias."
  TokenNonSepaDirectDebit:
    type: object
    properties:
      customer:
        $ref: '#/definitions/CustomerToken'
      mandate:
        $ref: '#/definitions/MandateNonSepaDirectDebit'
      alias:
        type: string
  TokenSepaDirectDebit:
    type: object
    properties:
      customer:
        $ref: '#/definitions/CustomerTokenWithContactDetails'
      mandate:
        $ref: '#/definitions/MandateSepaDirectDebit'
      alias:
        type: string
  CustomerToken:
    type: object
    description: "Object containing the details of the customer"
    properties:
      billingAddress:
        $ref: '#/definitions/Address'
      personalInformation:
        $ref: '#/definitions/PersonalInformationToken'
      companyInformation:
        $ref: '#/definitions/CompanyInformation'
      merchantCustomerId:
        type: string
        description: "Your identifier for the customer. It is also used in the fraud-screening process."
      vatNumber:
        type: string
        description: "Local VAT number of the company"
  TokenCardData:
    type: object
    description: "Object containing the card tokenizable details"
    properties:
      cardWithoutCvv:
        $ref: '#/definitions/CardWithoutCvv'
      firstTransactionDate:
        type: string
        description: "Date of the first transaction (for ATOS). Format: YYYYMMDD"
      providerReference:
        type: string
        description: "Reference of the provider (of the first transaction) - used to store the ATOS Transaction Certificate"
  TokenEWalletData:
    type: object
    description: "Object containing the eWallet tokenizable data"
    properties:
      billingAgreementId:
        type: string
        description: "Identification of the PayPal recurring billing agreement"
  MandateNonSepaDirectDebit:
    type: object
    properties:
      paymentProduct705SpecificData:
        $ref: '#/definitions/TokenNonSepaDirectDebitPaymentProduct705SpecificData'
      paymentProduct730SpecificData:
        $ref: '#/definitions/TokenNonSepaDirectDebitPaymentProduct730SpecificData'
  CustomerTokenWithContactDetails:
    type: object
    properties:
      contactDetails:
        $ref: '#/definitions/ContactDetailsToken'
      billingAddress:
        $ref: '#/definitions/Address'
      personalInformation:
        $ref: '#/definitions/PersonalInformationToken'
      companyInformation:
        $ref: '#/definitions/CompanyInformation'
      merchantCustomerId:
        type: string
      vatNumber:
        type: string
  MandateSepaDirectDebit:
    type: object
    properties:
      creditor:
        $ref: '#/definitions/Creditor'
      mandateId:
        type: string
      bankAccountIban:
        $ref: '#/definitions/BankAccountIban'
      customerContractIdentifier:
        type: string
      debtor:
        $ref: '#/definitions/Debtor'
      isRecurring:
        type: boolean
      mandateApproval:
        $ref: '#/definitions/MandateApproval'
      preNotification:
        type: string
  PersonalInformationToken:
    type: object
    description: "Object containing personal information of the customer"
    properties:
      name:
        $ref: '#/definitions/PersonalNameToken'
  TokenNonSepaDirectDebitPaymentProduct705SpecificData:
    type: object
    properties:
      authorisationId:
        type: string
      bankAccountBban:
        $ref: '#/definitions/BankAccountBban'
  TokenNonSepaDirectDebitPaymentProduct730SpecificData:
    type: object
    properties:
      bankAccountBban:
        $ref: '#/definitions/BankAccountBban'
  ContactDetailsToken:
    type: object
    properties:
      emailAddress:
        type: string
      emailMessageType:
        type: string
  Creditor:
    type: object
    properties:
      additionalAddressInfo:
        type: string
      city:
        type: string
      countryCode:
        type: string
      houseNumber:
        type: string
      iban:
        type: string
      id:
        type: string
      name:
        type: string
      referenceParty:
        type: string
      referencePartyId:
        type: string
      street:
        type: string
      zip:
        type: string
  Debtor:
    type: object
    properties:
      additionalAddressInfo:
        type: string
      city:
        type: string
      countryCode:
        type: string
      firstName:
        type: string
      houseNumber:
        type: string
      state:
        type: string
      stateCode:
        type: string
      street:
        type: string
      surname:
        type: string
      surnamePrefix:
        type: string
      zip:
        type: string
  MandateApproval:
    type: object
    properties:
      mandateSignatureDate:
        type: string
      mandateSignaturePlace:
        type: string
      mandateSigned:
        type: boolean
  PersonalNameToken:
    type: object
    description: "Given name(s) or first name(s) of the customer"
    properties:
      firstName:
        type: string
        description: "Given name(s) or first name(s) of the customer"
      surname:
        type: string
        description: "Surname(s) or last name(s) of the customer"
      surnamePrefix:
        type: string
        description: "Middle name - In between first name and surname - of the customers"